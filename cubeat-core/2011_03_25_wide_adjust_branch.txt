
1. heat value
   -- jama shooting don't use weapon (item) (see 2.) -- done, just all use onPress, not onHit.
   -- haste produce heat                 -- done
   -- jama shooting produce more heat    -- done
   -- overheat BIG icon over map, cursor change too.  
     -- done, but no sound
     -- fixed a glitch when you pressed haste and end game at the same time, it will keep hasting.
     -- fixed a glitch when puzzle mode, you can actually cause overheat by hasting.
   
2. no weapon  -- done
   -- no item  -- done
   -- remove from UI  -- done
   
3. warning not only at top, but also bottom, thicker  -- done

4. main menu's cubes are too crowded.  -- done (there are new designs anyway)

5. LuaJIT & new puzzle generator integration.  -- done
   -- code need clean up. but the integration has been successful.
     -- need enumerate where I used variadic template. fuck apple-gcc... -- done
   -- ** GLITCH NOTICED ** The dying delay of chained cubes might block falling cubes, 
      thus there's a chance "they might get chained in the air."   -- fixed.
   -- Generated answers tend to be on the right side of map.  -- done, horizontal flip for 50% chance

6. press enter to activate player control is weird. -- done, it should be tolerable for now.

7. in-game user control needs to be refined a little.  -- consider done for now
   -- remove weapon related controls. -- done(, see 1.)

8. pause menu -> can quit or resume game. -- done

9. need a formal way to terminate the game from main menu. -- done

10. main menu's button and menu title need to have a better indication.  -- done

11. "Chain" font block shooting  -- fixed. was pickable WTF!?

*** 12. copyright / credits screens.
   -- do it after musics could be changed. relatively simple to add than anything in the MainMenu.

13. OpenAL integration, bye bye irrKlang. -- DONE!!! FINALLY!!!

*** 14. Manymouse on Mac/Linux doable???
   -- first get a linux version done first.
   -- I am going to test if it's doable on Linux(Ubuntu) using virtualbox.

15. On Mac: -- done, statically linked, only thing left not solved is app icon.
    
16. Stage number in current puzzle mode. -- done
    
17. ALL MUST USE ABSOLUTE PATH 
  -- should be done for both Windows and Mac, not sure about Linux.
   
18. You have to "choose character for CPU" ... which is very strange. -- done, in a dirty way.

19. in CPU vs CPU mode you actually CANNOT quit.  -- done, finally got the bug thanks to Apple's crash report.


*** What I will not implement for this branch:

1. Multiple EventDispatcher. Multiple Timer for Multiple Scenes. 

2. Probably a generic high score record for each game-modes.
  -- It would be unwise to implement this before we have a better simplified interface for UI.

3. I think we really need real_y(pixel_y) as a model property, either use this with current 
   State pattern or revamp the state pattern.
   -- Why sometimes the bottom cubes' chain state isn't taken out?  -- ignore this for now.
   
4. We need better chaining cubes' indication. we need better indication of attacking and 
   cubes dropping and those sort of things. In short, we need better UI and user feedback design.
   
5. Something about lock and delayed cleanup:
   I found many places in code where we should actually check on the weak_ptr.lock(), 
   basically we have to assume it WILL somehow failed locking. if there's any performance hit,
   it would have be done already by locking, so I don't consider performance an issue here.
   
   and just like we can't erase or add an iterator during an iteration, it's the same for
   event subscription clean-up process. Like you can't call clean all button events in a button
   event callback itself! When in doubt, or have no obvious ways to resolve it, at least we
   should try to use EventDispatcher's timer callback to delay it.   

6. Something about Input scheme (see code Input.cpp around line 405):
   The input scheme here should have a total revamp. we should only designate Button1, Button2, 
   Button3... etc, never name it. It should have the flexibility to map every input to every
   abstract button you can have in game, and you can assign every event to every button!
   
   The current implementation was based on more or less a wii remote idea, some group of buttons
   and other group of buttons are just not interchangable. This is not optimal solution.
   
   
*** Other Memo:

1. Make default starting lines 3 only. I think a good choice would always be "num_of_colors - 1"

2. Memo about wide range of distribution: 
  -- dll's built with mingw which uses MSVCRT.dll is good to go, can be run on as old as Windows XP, I think.
     however libogg & libvorbis & luajit & OpenAL & ALURE aren't. They are dependent on MSVCRT100.dll.
     My old G1S laptop with WinXP SP3 can run it, but I doubt it's just lucky.
 
  -- Mac & Linux's build are probably mostly statically linked, which is good on this case.