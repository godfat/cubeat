cmake_minimum_required(VERSION 2.8)
# misc option
# SET (CMAKE_VERBOSE_MAKEFILE on)

PROJECT (cubeat)

# compiler option
SET (CMAKE_CXX_COMPILER "g++")

# setup cxx flags
IF(APPLE)
  SET (CMAKE_CXX_FLAGS "-std=c++98 -Wall -O3 -ffast-math -fvisibility-inlines-hidden")
ELSE(APPLE)
  SET (CMAKE_CXX_FLAGS "-std=c++98 -Wall -O3 -ffast-math")
ENDIF(APPLE)

# setup compile time definitions
ADD_DEFINITIONS (-DNDEBUG -DBOOST_DISABLE_ASSERTS) # -DBOOST_HAS_TR1

# setup include path
INCLUDE_DIRECTORIES (include
                     lib
                     ../irrlicht/include
                     /usr/local/include/luajit-2.0
                     /usr/include/luajit-2.0)

# setup linking path
IF(APPLE)
  LINK_DIRECTORIES (/usr/X11/lib
                    <%= "#{Dir.pwd}/lib" %>
                    <%= "#{Dir.pwd}/../irrlicht/source/Irrlicht/MacOSX/build/Release" %>)
ELSE(APPLE)
  LINK_DIRECTORIES (/usr/X11/lib
                    #/usr/lib/mesa
                    <%= "#{Dir.pwd}/lib" %>
                    <%= "#{Dir.pwd}/../irrlicht/lib/Linux" %>)
ENDIF(APPLE)

# setup linking
IF(APPLE)
  LINK_LIBRARIES (Irrlicht freetype luajit-5.1 alure boost_thread-mt)
ELSE(APPLE)
  LINK_LIBRARIES (Irrlicht freetype luajit-5.1 alure boost_thread openal GL X11 Xxf86vm)
ENDIF(APPLE)

# setup source codes
SET (SOURCES <%= Dir.glob('src/**/*.cpp').
                     delete_if{ |f| f =~ /wii/i || f =~ /main\.cpp$/ }.
                     join("\n") + "\n" + 
                 Dir.glob('lib/**/*.c*').join("\n") %>)

# build target
ADD_LIBRARY (cubeat SHARED ${SOURCES})
SET         (LIBRARY_OUTPUT_PATH bin)

IF(APPLE)
<% frameworks = %w[
  -framework Foundation
  -framework AppKit
  -framework IOKit
  -framework OpenAL
  -framework OpenGL
  -framework Carbon].join(' ').squeeze(' ') %>

  ADD_EXECUTABLE        (bin/cubeat main.mm)
  SET_TARGET_PROPERTIES (bin/cubeat PROPERTIES LINK_FLAGS
                         "-pagezero_size 10000 -image_base 100000000 <%= frameworks %>")
  SET_TARGET_PROPERTIES (cubeat PROPERTIES LINK_FLAGS "<%= frameworks %>")

ELSE(APPLE)
  ADD_EXECUTABLE        (bin/cubeat main.cpp)
ENDIF(APPLE)

TARGET_LINK_LIBRARIES (bin/cubeat cubeat)

# on Linux, we'd like to distinguish the final bundle between x86_64 / i686
if(UNIX)

  # also we have to strip this "rpath" thingy
  SET(CMAKE_SKIP_RPATH TRUE)

  INSTALL(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/rc
          DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/built_bundle)

  INSTALL(PROGRAMS setup.sh cleanup.sh CuBeat.sh
          DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/built_bundle)

  if(CMAKE_SIZEOF_VOID_P MATCHES "8")
    SET(LIBS_PATH libs64)   
  else(CMAKE_SIZEOF_VOID_P MATCHES "8")
    SET(LIBS_PATH libs32)
  endif(CMAKE_SIZEOF_VOID_P MATCHES "8")

  INSTALL(TARGETS cubeat
          DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/built_bundle/libs32)

  INSTALL(TARGETS bin/cubeat
          DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/built_bundle)

endif(UNIX)



