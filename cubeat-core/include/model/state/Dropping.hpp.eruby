
<% header_guard do %>

#include "model/state/State.hpp"
#include "utils/ObjectPool.hpp"

#include <boost/tr1/memory.hpp>

<%= debug_include %>

namespace psc{ namespace model{ namespace state{

class Dropping: public State{
public:
    typedef std::tr1::shared_ptr<Dropping> pointer_type;

public:
    static pState create(std::tr1::weak_ptr<Cube> owner){
        return utils::ObjectPool<Dropping>::create(owner)->init();
    }

public:
    Dropping(std::tr1::weak_ptr<Cube> owner): State(owner){}
    virtual <% debug_hook '~Dropping' do %>(){<%end%>}

protected:
    virtual pState init();
};

}}} // end of namespace

<% end %>
