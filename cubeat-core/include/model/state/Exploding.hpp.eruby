
<% header_guard do %>

#include "model/state/State.hpp"
#include "utils/ObjectPool.hpp"
#include "all_fwd.hpp"

<%= debug_include %>

namespace psc{ namespace model{ namespace state{

class Exploding: public State{
public:
    typedef pExploding pointer_type;

public:
    static pExploding create(wpCube owner){ return utils::ObjectPool<Exploding>::create(owner); }

public:
    Exploding(wpCube owner): State(owner), explosion_started_(false), exploding_step_(0){}
    virtual <% debug_hook '~Exploding' do %>(){<%end%>}
    virtual void cycle(time_t const&, time_t const&);

private:
    bool explosion_started_;
    int exploding_step_;
};

}}} // end of namespace

<% end %>
