
<% header_guard do %>
<%= debug_include %>

#include <tr1/memory>

namespace psc{ namespace data{

class MapSetting{<%# @prefix = ' '*4 %>
public:
    typedef std::tr1::shared_ptr<MapSetting> pointer_type;
    static pointer_type create(){
        return pointer_type(new MapSetting);
    }

<%= accessor :int, :color_amounts, :chain_amounts, :starting_line, :chaining_duration, :cube_dying_duration, :cube_sinking_duration, :cube_dropping_duration, :warning_check_delay %>
<%= accessor :double, :speed, :damage_factor %>
<%= accessor :int, :centerx %>
<%= reader :int, :width, :height, :size %>
<%= accessor :bool, :dropping_creatable, :garbage_dumpable %>
public:
    MapSetting& <% debug_hook 'width' do %>(int const& new_width){
<% end %>
        width_ = new_width;
        return reset_size();
    }
    MapSetting& <% debug_hook 'height' do %>(int const& new_height){
<% end %>
        height_ = new_height;
        return reset_size();
    }

    <% debug_hook '~MapSetting' do %>(){<%end%>}

private:
    MapSetting():
        color_amounts_(4), chain_amounts_(3), starting_line_(4),
        chaining_duration_(200), cube_dying_duration_(320), cube_sinking_duration_(500),
        cube_dropping_duration_(200), warning_check_delay_(100),
        speed_(80.0), damage_factor_(1.00),
        width_(6), height_(11), dropping_creatable_(true), garbage_dumpable_(true)
    { reset_size(); }

private:
    MapSetting& <% debug_hook 'reset_size' do %>(){ <%end%> size_ = width_ * height_; return *this; }
};

}} // end of namespace

<% end %>
