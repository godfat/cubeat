
<% header_guard do %>

#include "model/state/State.hpp"
#include "utils/ObjectPool.hpp"
#include "all_fwd.hpp"

<%= debug_include %>

namespace psc{ namespace model{ namespace state{

class Waiting: public State{
public:
    typedef pWaiting pointer_type;

public:
    static pState create(wpCube owner){ return utils::ObjectPool<Waiting>::create(owner); }
public:
    Waiting(wpCube owner): State(owner), not_checked_(true),
                           chain_property_checked_(false), delay_(0)
    {}

    virtual <% debug_hook '~Waiting' do %>(){<%end%>}
    virtual void cycle();

    // begin only used by Map::next_state
	void checked(){ not_checked_ = false; }
	void chain_property_checked(){ chain_property_checked_ = true; }
    bool need_check() const;
	bool need_check_chain_property() const;
    // end

	void uncheck(){ not_checked_ = true; }

private:
    bool not_checked_;
	bool chain_property_checked_;
    int delay_;
};

}}}

<% end %>
