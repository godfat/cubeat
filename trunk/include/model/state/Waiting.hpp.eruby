
<% header_guard do %>

#include "model/state/State.hpp"
#include "utils/ObjectPool.hpp"
#include "all_fwd.hpp"

<%= debug_include %>

namespace psc{ namespace model{ namespace state{

class Waiting: public State{
public:
    typedef pWaiting pointer_type;

public:
    static pState create(wpCube owner){ return utils::ObjectPool<Waiting>::create(owner); }
public:
    Waiting(wpCube owner): State(owner), checked_(false),
                           chain_property_checked_(false)
    {}

    virtual <% debug_hook '~Waiting' do %>(){<%end%>}
    virtual void cycle();

    // begin only used by Map::next_state
    bool need_check() const{ return checked_ == false; };
	void checked(){ checked_ = true; }
	void chain_property_checked(){ chain_property_checked_ = true; }
	bool need_check_chain_property() const;
    // end

    // for Cube#restore
	void uncheck(){ checked_ = false; }

private:
    bool checked_;
	bool chain_property_checked_;
    // int delay_;
};

}}}

<% end %>
