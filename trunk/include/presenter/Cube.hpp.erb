
<% header_guard do %>

// 1. map presenter is created.
// 2. map model is inited.
// 3. map view is inited.
// 
// 4. cube presenter list is created, passing map presenter to it.
// 5. cube model is inited, getting map model.
// 6. map model gets cube model.
// 
// 7. cube view is inited, getting map view.
// 8. map view gets cube view.

#include "model/Cube.hpp"
#include "presenter/Map.hpp"

#include "all_fwd.hpp"
#include "utils/ObjectPool.hpp"

#include <boost/tr1/tr1/memory>

namespace psc{ namespace presenter{

class Cube{
public:
    typedef std::tr1::shared_ptr<Cube> pointer_type;

public:
    pCube static create(wpMap map, int x = 0, int y = 0, int color_id = 0){
        return utils::ObjectPool<Cube>::create(map, x, y, color_id);
    }
public:
    Cube(wpMap map, int x = 0, int y = 0, int color_id = 0);

    int x() const{ return model()->x(); }
    int y() const{ return model()->y(); }

private:
    wpMap map_;
<%= reader 'model::pCube', :model %>
<%= reader 'view::pCube', :view %>
};

}}

<% end %>
