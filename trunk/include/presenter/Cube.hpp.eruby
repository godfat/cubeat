
<% header_guard do %>

// 1. map presenter is created.
// 2. map model is inited.
// 3. map view is inited.
// 
// 4. cube presenter list is created, passing map presenter to it.
// 5. cube model is inited, getting map model.
// 6. map model gets cube model.
// 
// 7. cube view is inited, getting map view.
// 8. map view gets cube view.

#include "all_fwd.hpp"
#include "utils/ObjectPool.hpp"
#include "presenter/cube/ViewBase.hpp"

#include <boost/foreach.hpp>
#include <tr1/memory>

<%= debug_include %>

namespace psc{ namespace presenter{

class Cube{
public:
    typedef Cube this_type;
    typedef std::tr1::shared_ptr<this_type> pointer_type;

public:
    pointer_type static create(wpMap map, int x = 0, int y = 0, int color_id = 0){
        return utils::ObjectPool<this_type>::create(map, x, y, color_id);
    }
public:
    Cube(wpMap map, int x = 0, int y = 0, int color_id = 0);
    <% debug_hook '~Cube' do %>(){<%end%>}

    void <% debug_hook 'drop_a_block' do %>(){ <% end %>
        BOOST_FOREACH(cube::pViewBase view, views_){ if(view) view->drop_a_block(); }
    }
    void <% debug_hook 'go_dying' do %>(){ <% end %>
        BOOST_FOREACH(cube::pViewBase view, views_){ if(view) view->go_dying(); }
    }
    void <% debug_hook 'go_exploding' do %>(){ <% end %>
        BOOST_FOREACH(cube::pViewBase view, views_){ if(view) view->go_exploding(); }
    }
    void <% debug_hook 'be_garbage' do %>(){ <% end %>
        BOOST_FOREACH(cube::pViewBase view, views_){ if(view) view->be_garbage(); }
    }
    void <% debug_hook 'be_broken' do %>(){ <% end %>
        BOOST_FOREACH(cube::pViewBase view, views_){ if(view) view->be_broken(); }
    }
    void <% debug_hook 'restore' do %>(){ <% end %>
        BOOST_FOREACH(cube::pViewBase view, views_){ if(view) view->restore(); }
    }
    Cube& push_view(cube::pViewBase view){ views_.push_back(view); return *this; }

    int x() const;
    int y() const;
    int color_id() const;

private:
    wpMap map_;
<%= reader 'model::pCube', :model %>
    std::list<cube::pViewBase> views_;
};

}}

<% end %>
