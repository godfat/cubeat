
<% header_guard do %>

#include "data/Cube.hpp"

#include <tr1/memory>
#include <tr1/functional>

namespace psc{ namespace presenter{ namespace cube{

class ViewBase{
<%= accessor :'data::wpCube', :data %>
public:
    typedef std::tr1::shared_ptr<ViewBase> pointer_type;
    static pointer_type create(data::wpCube data){
        return utils::ObjectPool<ViewBase>::create(data);
    }
public:
    ViewBase(data::wpCube data): data_(data){}
    virtual ~ViewBase(){}
    virtual void drop_a_block(){}
    virtual void cycle(){}
};

}}} // end of namespaces

<% end %>
