
<% header_guard do %>

#include "model/Cube.hpp"
#include <tr1/memory>

namespace psc{ namespace presenter{ namespace cube{

class ViewBase{
<%= accessor :'data::wpCube', :data %>
public:
    typedef std::tr1::shared_ptr<ViewBase> pointer_type;
    static pointer_type create(model::pCube){ return pointer_type(); }
public:
    ViewBase(model::pCube cube): data_(cube->data()){}
    virtual ~ViewBase(){}
    virtual void drop_a_block(){}
    virtual void go_dying(){}
    virtual void go_exploding(){}
};

}}} // end of namespaces

<% end %>
