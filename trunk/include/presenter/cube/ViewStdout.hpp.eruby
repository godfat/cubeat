
<% header_guard do %>

#include "presenter/cube/ViewBase.hpp"
#include "presenter/Map.hpp"
#include <cstdio>
#include <cstdlib>
#include <ctime>

namespace psc{ namespace presenter{ namespace cube{

class ViewStdout: public ViewBase{
public:
    static ViewBase::pointer_type create(data::wpCube data){
        return ViewBase::pointer_type();
    }
    static void redraw(Map const& map){
        static std::clock_t last_ = std::clock();
        std::clock_t now = std::clock();
        if( now - last_ < CLOCKS_PER_SEC/10.0 ) return;
        else last_ = now;

        Map::color_map_type p = map.color_map();
        for(int y=map.setting()->height()-1; y>=0; --y){
            for(int x=0; x<map.setting()->width(); ++x)
                std::printf("%2d", p[x][y]);
            std::printf("\n");
        }
        std::printf("\n");
    }

private:
    ViewStdout();
};

}}} // end of namespaces

<% end %>
