
<% header_guard do %>

#include <boost/tr1/tr1/random>
#include <ctime>
namespace psc{ namespace utils{

class Random{
public:
    static Random& i(){ static Random rnd; return rnd; }

public:
    int random(int max){
        if( max == 0) return 0;
        std::tr1::variate_generator<std::tr1::mt19937&, std::tr1::uniform_int<> > dice(engine_, std::tr1::uniform_int<>(0, max-1));
        return dice();
    }
private:
    Random(): engine_(std::time(0)^std::clock()){}
    std::tr1::mt19937 engine_;

};

inline int random(int max){
    return Random::i().random(max);
}

}} // end of namespace
<% end %>
