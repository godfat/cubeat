
<% header_guard do %>

#include <boost/multi_array.hpp>
namespace psc{ namespace utils{

template <typename T>
class vector_2d: public boost::multi_array<T, 2>{
public:
    vector_2d(int width, int height):
        boost::multi_array<T, 2>(boost::extents[width][height]){}
};

template <typename T, typename Fun>
vector_2d<T>& for_each(vector_2d<T>& vector, Fun fun){
    for(typename vector_2d<T>::size_type y=0; y != vector.shape()[1]; ++y)
        for(typename vector_2d<T>::size_type x=0; x != vector.shape()[0]; ++x)
            fun(vector[x][y], x, y);
    return vector;
}

template <typename T, typename Fun>
vector_2d<T>& for_each_ignore_null(vector_2d<T>& vector, Fun fun){
    for(typename vector_2d<T>::size_type y=0; y != vector.shape()[1]; ++y)
        for(typename vector_2d<T>::size_type x=0; x != vector.shape()[0]; ++x)
            if(vector[x][y])
                fun(vector[x][y], x, y);
    return vector;
}

}} // end of namespace

<% end %>
